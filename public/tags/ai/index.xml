<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on Juraj Kosik</title>
    <link>https://jkosik.github.io/tags/ai/</link>
    <description>Recent content in AI on Juraj Kosik</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 May 2025 14:15:05 +0700</lastBuildDate>
    <atom:link href="https://jkosik.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Supercharging your AI agent with MCP (Model Context Protocol)</title>
      <link>https://jkosik.github.io/posts/ai/</link>
      <pubDate>Sun, 04 May 2025 14:15:05 +0700</pubDate>
      <guid>https://jkosik.github.io/posts/ai/</guid>
      <description>&lt;p&gt;In this blog post, I’ll show you how I supercharged the Cursor code assistant by feeding it real-time data from remote data sources — essentially teaching it things it wasn’t pre-trained to know. Technology described offers huge range of other use cases and is a &amp;ldquo;new big thing in AI&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On-prem AI</title>
      <link>https://jkosik.github.io/posts/ai/</link>
      <pubDate>Wed, 04 Sep 2024 14:15:05 +0700</pubDate>
      <guid>https://jkosik.github.io/posts/ai/</guid>
      <description>&lt;p&gt;This blog post provides a high-level overview of building a self-hosted AI system on-premises from scratch. Given the complexity of the topic, I&amp;rsquo;ll highlight key points that should prompt further self-study. My goal is to give you a basic understanding of the components involved, how they interact, and the steps needed to set up AI infrastructure locally.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
